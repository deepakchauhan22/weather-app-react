{"version":3,"sources":["assets/Mist.jpg","assets/smog.jpg","assets/fog.jpg","assets/clearsky.jpg","assets/haze.jpg","assets/sunny.jpg","assets/cloudy.jpg","assets/lightning.jpg","assets/rainroad.jpg","assets/nightcity.jpg","assets/nightmoon.jpg","assets/goa.jpg","assets/cloudnoon.jpg","assets/cloudeve.jpg","assets/snow.jpg","assets/rain.jpg","assets/night.jpg","assets/moon.jpg","assets/evening.jpg","assets/delhiday.jpg","assets/Mumbai.jpg","assets/kasol.jpg","assets/shimla.jpg","assets/udaipur.jpg","assets/jaipur.jpg","assets/varanasi.jpg","assets/mathura.jpg","assets/agra.jpg","assets/punjab.jpg","assets/kolkata.jpg","assets/chennai.jpg","assets/bengaluru.jpg","assets/pune.jpg","assets/hyderabad.jpg","assets/jaisalmer.jpg","assets/pithoragarh.jpg","assets/citypic.jpg","assets/normweather.jpg","assets/cloudy.svg","assets/day.svg","assets/thunder.svg","assets/night.svg","assets/rainy.svg","assets/haze.svg","assets/mist.svg","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","className","href","Component","App","handleChange","event","console","log","setState","parameter","target","value","handleSubmit","preventDefault","componentDidMount","state","img","error","title","temp","feels","humidity","name","status","description","Background","searchInput","url","undefined","fetch","then","response","json","data","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","coord","lon","main","feels_like","weather","media_type","country","wind","speed","catch","this","temperature","parseInt","feelslike","urlImg","iconsvg","cityImg","Smog","cloudicon","cloudy","fog","misticon","Mist","clearsky","sunicon","lightning","thunder","rainroad","rainicon","haze","hazeicon","normweather","goa","delhi","mumbai","shimla","kasol","udaipur","jaipur","pithoragarh","jaisalmer","varanasi","mathura","agra","pune","hyderabad","punjab","chennai","bengaluru","citypic","style","backgroundImage","class","onSubmit","onChange","type","placeholder","src","alt","moonicon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.094dd1b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Mist.4762d3fd.jpg\";","export default __webpack_public_path__ + \"static/media/smog.805a4303.jpg\";","export default __webpack_public_path__ + \"static/media/fog.87538f81.jpg\";","export default __webpack_public_path__ + \"static/media/clearsky.ccae97df.jpg\";","export default __webpack_public_path__ + \"static/media/haze.ce56be8c.jpg\";","export default __webpack_public_path__ + \"static/media/sunny.9b7378c7.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy.7ee697ea.jpg\";","export default __webpack_public_path__ + \"static/media/lightning.a5a3ab27.jpg\";","export default __webpack_public_path__ + \"static/media/rainroad.9126441e.jpg\";","export default __webpack_public_path__ + \"static/media/nightcity.b9d2f20c.jpg\";","export default __webpack_public_path__ + \"static/media/nightmoon.3b551c98.jpg\";","export default __webpack_public_path__ + \"static/media/goa.1da6202d.jpg\";","export default __webpack_public_path__ + \"static/media/cloudnoon.a015e132.jpg\";","export default __webpack_public_path__ + \"static/media/cloudeve.6eacb274.jpg\";","export default __webpack_public_path__ + \"static/media/snow.608095c0.jpg\";","export default __webpack_public_path__ + \"static/media/rain.b2557aff.jpg\";","export default __webpack_public_path__ + \"static/media/night.6a6a8549.jpg\";","export default __webpack_public_path__ + \"static/media/moon.b6cc4a7a.jpg\";","export default __webpack_public_path__ + \"static/media/evening.2b709d87.jpg\";","export default __webpack_public_path__ + \"static/media/delhiday.671d4294.jpg\";","export default __webpack_public_path__ + \"static/media/Mumbai.1249b7d8.jpg\";","export default __webpack_public_path__ + \"static/media/kasol.0a36214a.jpg\";","export default __webpack_public_path__ + \"static/media/shimla.64c32961.jpg\";","export default __webpack_public_path__ + \"static/media/udaipur.2ce38e64.jpg\";","export default __webpack_public_path__ + \"static/media/jaipur.3f7eb937.jpg\";","export default __webpack_public_path__ + \"static/media/varanasi.e800e401.jpg\";","export default __webpack_public_path__ + \"static/media/mathura.3135ebf3.jpg\";","export default __webpack_public_path__ + \"static/media/agra.50849407.jpg\";","export default __webpack_public_path__ + \"static/media/punjab.40b4b738.jpg\";","export default __webpack_public_path__ + \"static/media/kolkata.2debd423.jpg\";","export default __webpack_public_path__ + \"static/media/chennai.ab4eb930.jpg\";","export default __webpack_public_path__ + \"static/media/bengaluru.dc790d83.jpg\";","export default __webpack_public_path__ + \"static/media/pune.54b8378c.jpg\";","export default __webpack_public_path__ + \"static/media/hyderabad.8e81e5b9.jpg\";","export default __webpack_public_path__ + \"static/media/jaisalmer.d0853b04.jpg\";","export default __webpack_public_path__ + \"static/media/pithoragarh.8403b6ae.jpg\";","export default __webpack_public_path__ + \"static/media/citypic.12d1fc4c.jpg\";","export default __webpack_public_path__ + \"static/media/normweather.20863ddf.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy.24f9a474.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/night.6cf4adcd.svg\";","export default __webpack_public_path__ + \"static/media/rainy.9305701c.svg\";","export default __webpack_public_path__ + \"static/media/haze.37766ef2.svg\";","export default __webpack_public_path__ + \"static/media/mist.c90a1604.svg\";","import React  ,{ Component } from 'react';\r\n\r\nclass Footer extends Component{\r\n\r\n    constructor(props){\r\n        super(props);     \r\n    }\r\n\r\n  \r\n    \r\n    render(){\r\n        return(\r\n                 \r\n               \r\n        <>\r\n         \r\n        <div className=\"footer\">\r\n      \r\n        <div className=\"aboutme\">\r\n           <p className= \"name\">A project by <a href=\"https://www.linkedin.com/in/deepakchauhan22/\">Deepak Chauhan</a></p>\r\n        </div>\r\n         </div>\r\n        </>\r\n     \r\n\r\n        );\r\n    }\r\n}\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Mist from './assets/Mist.jpg'; \nimport Smog from './assets/smog.jpg'; \nimport fog from './assets/fog.jpg'; \nimport clearsky from './assets/clearsky.jpg'; \nimport sunny from './assets/sunny.jpg'; \nimport haze from './assets/haze.jpg'; \nimport cloudy from './assets/cloudy.jpg'; \nimport lightning from './assets/lightning.jpg'; \nimport nightcity from './assets/nightcity.jpg'; \nimport nightmoon from './assets/nightmoon.jpg'; \nimport rainroad from './assets/rainroad.jpg'; \nimport cloudnoon from './assets/cloudnoon.jpg'; \nimport cloudeve from './assets/cloudeve.jpg'; \nimport snow from './assets/snow.jpg'; \nimport rain from './assets/rain.jpg'; \nimport night from './assets/night.jpg'; \nimport moon from './assets/moon.jpg'; \nimport evening from './assets/evening.jpg'; \nimport goa from './assets/goa.jpg'; \nimport delhi from './assets/delhiday.jpg'; \nimport mumbai from './assets/Mumbai.jpg'; \nimport kasol from './assets/kasol.jpg'; \nimport shimla from './assets/shimla.jpg'; \nimport udaipur from './assets/udaipur.jpg'; \nimport jaipur from './assets/jaipur.jpg'; \nimport varanasi from './assets/varanasi.jpg';\nimport mathura from './assets/mathura.jpg';\nimport agra from './assets/agra.jpg';\nimport kolkata from './assets/kolkata.jpg';\nimport punjab from './assets/punjab.jpg';\nimport chennai from './assets/chennai.jpg';\nimport bengaluru from './assets/bengaluru.jpg';\nimport pune from './assets/pune.jpg';\nimport hyderabad from './assets/hyderabad.jpg';\nimport jaisalmer from './assets/jaisalmer.jpg'; \nimport pithoragarh from './assets/pithoragarh.jpg'; \nimport citypic from './assets/citypic.jpg'; \nimport normweather from './assets/normweather.jpg'; \nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport cloudicon from './assets/cloudy.svg';\nimport sunicon from './assets/day.svg';\nimport thunder from './assets/thunder.svg';\nimport moonicon from './assets/night.svg';\nimport rainicon from './assets/rainy.svg';\nimport hazeicon from './assets/haze.svg';\nimport misticon from './assets/mist.svg';\nimport Footer from './component/Footer';\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n        img : [],\n        error:false,\n        title:null,\n        temp:null,\n        feels:null,\n        humidity:null,\n        name:null,\n        status:[],\n        description:[],\n        Background:'',\n        parameter: '',\n       \n    };\n}\n\n    handleChange =(event) =>{\n      console.log(\"Value passed\");\n      this.setState({\n          parameter: event.target.value\n      });\n    };\n\n    handleSubmit = event =>{\n      event.preventDefault();\n      this.componentDidMount(this.state.parameter)\n      console.log(\"API call made\");\n    }\n\n  componentDidMount(searchInput){\n\n    // var city = 'goa'\n    console.log(searchInput);\n    var url = ''\n    if (searchInput == undefined || ''){\n      searchInput = 'delhi'\n       url= `https://api.openweathermap.org/data/2.5/weather?q=${searchInput}&appid=b13980e162ac6f5306a43f16e7841c7d`\n    }\n    else{\n       url= `https://api.openweathermap.org/data/2.5/weather?q=${searchInput}&appid=b13980e162ac6f5306a43f16e7841c7d`\n\n    }\n   \n       fetch(url)\n       .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n\n        const months = [\n          'January',\n          'February',\n          'March',\n          'April',\n          'May',\n          'June',\n          'July',\n          'August',\n          'September',\n          'October',\n          'Nocvember',\n          'December',\n        ];\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]}, ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n\n        this.setState({\n          img: data,\n          title: data.coord.lon,\n          temp:data.main.temp,\n          feels:data.main.feels_like,\n          status: data.weather[0].main,\n          description: data.weather[0].description,\n          humidity: data.main.humidity,\n          media_type: data.media_type,\n          name: data.name,\n          country: data.sys.country,\n          wind: data.wind.speed,\n          date,\n          sunset,\n          sunrise,\n        })\n      })\n       .catch((error)=>{\n           this.setState({\n               error:true\n           })\n       });\n    }\n   \n \n      \nrender (){\n  \n  const {temp,feels,status,wind,sunrise, sunset,date ,description,country,name,humidity, Background} =this.state;\n  var tempC = temp - 273.15;\n  var feels_like = feels - 273.15\n  var temperature =parseInt(tempC);\n  var feelslike = parseInt(feels_like);\n\n \n  var urlImg = null;\n  var iconsvg = null;\n  var cityImg = null;\n\n  // var d = new Date();\n  // var currentDate = d.toDateString();\n\n \n\n \n//status check\n  if(status=='Smoke'){\n    // var urlImg= ''\n    // urlImg = 'https://images.unsplash.com/photo-1491002052546-bf38f186af56?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1383&q=80'\n    urlImg = Smog;\n    iconsvg = cloudicon;\n\n  }\n    else if (status==='Clouds')\n    {\n      iconsvg = cloudicon;\n    urlImg = cloudy;\n   }\n    else if (status==='Fog')\n    {\n      iconsvg = cloudicon;\n    urlImg = fog;\n   }\n    else if (status==='Mist') {\n      iconsvg = misticon;\n      urlImg = Mist;\n    }\n    else if (status==='Clear') {\n      urlImg = clearsky;\n      iconsvg = sunicon;\n\n    }\n\telse if (status==='Thunderstorm') {\n      urlImg = lightning;\n      iconsvg = thunder;\n    }\n\t\telse if (status==='Rain') {\n      urlImg = rainroad;\n      iconsvg = rainicon;\n    }\n\t\n\telse if (status==='Haze') {\n      urlImg = haze;\n      iconsvg = hazeicon;\n    }\n\telse{\n    urlImg = normweather;\n    iconsvg = cloudicon;\n\n\t}\n  //city check\n  \n   if(name==='Goa'){\n    cityImg = goa;\n    }\n    else if (name==='Delhi')\n    {\n      cityImg = delhi;\n   }\n    else if (name==='Mumbai') {\n      cityImg = mumbai;\n     }\n     else if (name==='Shimla') {\n      cityImg = shimla;\n     }\n     else if (name==='Kasol') {\n      cityImg = kasol;\n     }\n     else if (name==='Udaipur') {\n      cityImg = udaipur;\n     }\n     else if (name==='Jaipur') {\n      cityImg = jaipur;\n     }\n     else if (name==='Pithorāgarh') {\n      cityImg = pithoragarh;\n     }\n\t else if (name==='Jaisalmer') {\n      cityImg = jaisalmer;\n     }\n\t else if (name==='Varanasi') {\n      cityImg = varanasi;\n     }\n\t else if (name==='Mathura') {\n      cityImg = mathura;\n     }\n\t  else if (name==='Agra') {\n      cityImg = agra;\n     }\n\t else if (name==='Pune') {\n      cityImg = pune;\n     }\n\t  else if (name==='Hyderabad') {\n      cityImg = hyderabad;\n     }\n\t  else if (name==='Punjab'||name==='Haryana'|| name==='Gurgaon'||name==='Chandigarh') {\n      cityImg = punjab;\n     }\n\t else if (name==='Chennai') {\n      cityImg = chennai;\n     }\n\t else if (name==='Bengaluru') {\n      cityImg = bengaluru;\n     }\n\t else{\n\t\t cityImg = citypic;\n\t }\n\n  return (\n    \n   \n    <div className=\"App\" style={{ backgroundImage: `url(${urlImg})` }}>  \n                                                    {/* style={{ backgroundImage: \"url(/delhi.jpg)\" }}>  style={this.state.backgroundStyle}*/}\n                    <div class=\"searchBox\">\n                          <form onSubmit={this.handleSubmit}>\n                             <input class=\"searchInput\" onChange={this.handleChange} type ='Search' value={this.state.parameter} placeholder=\"Search your City...\"/> \n                          </form>\n                    </div>\n  \n      <div className=\"Block\"  >\n        <div className=\"grid-container\"> \n           \n           \n                  \n             \n                 \n                <section className=\"item1\"  style={{backgroundImage: `url(${cityImg})` }}>\n\n                                <h2>{name}, {country}</h2>\n                                <h3>{temperature}<span>&#176;c</span></h3>\n                </section>\n                          \n\n                <section className=\"item2\">  \n                <h4>{date}</h4>\n                            <div class=\"flex-container main\">\n                            \n                                  <div class=\"flex-item-left\">\n                                            <img src={iconsvg} alt=\"Cloud\" />\n                                            <p>{description}</p>\n                                            <p>Feels like : {feelslike}<span>&#176;c</span></p>\n                                            <p>Wind : {wind}kmph</p>\n                                            <p>Humidity : {humidity}<span>&#37;</span></p>     \n                                  </div>\n\n                                  <div class=\"flex-item-right\">\n                                        <div class=\"flex-container moredetails\">\n                                              <div class=\"flex-item-left\">\n                                                  <img src={sunicon} alt=\"Cloud\" /> <br/>\n                                                  <p>{sunrise}</p>\n                                              </div>\n                                              <div class=\"flex-item-mid\">\n                                                  <img src={moonicon} alt=\"Cloud\" /> \n                                                    <p>{sunset}</p>\n                                              </div>\n                                              <div class=\"flex-item-right\">\n                                                    <img src={rainicon} alt=\"Cloud\" /> \n                                                    <p>{humidity}%</p>\n                                              </div>\n                                        </div>\n                                  </div>\n                            </div>\n\n                </section>\n         </div>\n        </div>\n\n       \n        <Footer />\n\n\n        \n\n    </div>\n\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}